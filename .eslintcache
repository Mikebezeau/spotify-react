[{"C:\\Program Files\\nodejs\\spotify-react\\src\\index.js":"1","C:\\Program Files\\nodejs\\spotify-react\\src\\App.js":"2","C:\\Program Files\\nodejs\\spotify-react\\src\\reportWebVitals.js":"3","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Nav.js":"4","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\MusicControls.js":"5","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Main.js":"6","C:\\Program Files\\nodejs\\spotify-react\\src\\spotify\\Credentials.js":"7","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Slider.js":"8","C:\\Program Files\\nodejs\\spotify-react\\src\\utility\\SliderBase.js":"9","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Listbox.js":"10","C:\\Program Files\\nodejs\\spotify-react\\src\\components\\DetailModal.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":3885,"mtime":1611335803258,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":4662,"mtime":1611336148260,"results":"16","hashOfConfig":"13"},{"size":723,"mtime":1611335400891,"results":"17","hashOfConfig":"13"},{"size":1904,"mtime":1611260648376,"results":"18","hashOfConfig":"13"},{"size":193,"mtime":1611176502901,"results":"19","hashOfConfig":"13"},{"size":3934,"mtime":1611260820372,"results":"20","hashOfConfig":"13"},{"size":2801,"mtime":1611242927771,"results":"21","hashOfConfig":"13"},{"size":801,"mtime":1611334492078,"results":"22","hashOfConfig":"13"},{"size":1010,"mtime":1611261129506,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ubzmpr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Program Files\\nodejs\\spotify-react\\src\\index.js",[],["49","50"],"C:\\Program Files\\nodejs\\spotify-react\\src\\App.js",["51","52"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { Credentials } from './spotify/Credentials';\r\nimport Nav from './components/Nav';\r\nimport Main from './components/Main';\r\nimport MusicControls from './components/MusicControls';\r\n\r\nimport './sass/GradientTransform.scss';\r\n\r\nimport $ from 'jquery';\r\n\r\nfunction App() {\r\n  \r\n    const spotify = Credentials();\r\n    const [token, setToken] = useState('');\r\n    const [genres, setGenres] = useState({selectedGenre:'', listOfGenresFromAPI: []});\r\n    const [playlists, setPlaylists] = useState({selectedPlaylist:'', listOfPlaylistsFromAPI: []});\r\n    const [tracks, setTracks] = useState({selectedTrack:'', listOfTracksFromAPI: []});\r\n    const [trackDetail, setTrackDetail] = useState(null);\r\n    \r\n    useEffect(() => {\r\n\r\n      axios('https://accounts.spotify.com/api/token', {\r\n        headers: {\r\n          'Content-Type' : 'application/x-www-form-urlencoded',\r\n          'Authorization' : 'Basic ' + btoa(spotify.ClientId + ':' + spotify.ClientSecret)      \r\n        },\r\n        data: 'grant_type=client_credentials',\r\n        method: 'POST'\r\n      })\r\n      .then(tokenResponse => {      \r\n        setToken(tokenResponse.data.access_token);\r\n  \r\n        axios('https://api.spotify.com/v1/browse/categories?locale=sv_US', {\r\n          method: 'GET',\r\n          headers: { 'Authorization' : 'Bearer ' + tokenResponse.data.access_token}\r\n        })\r\n        .then (genreResponse => {  \r\n          console.log('genreResponse');\r\n          setGenres({\r\n            selectedGenre: genres.selectedGenre,\r\n            listOfGenresFromAPI: genreResponse.data.categories.items\r\n          })\r\n        });\r\n        \r\n      });\r\n  \r\n    //}, [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]);\r\n    }, [spotify.ClientId, spotify.ClientSecret]);\r\n  \r\n    const genreChanged = val => {\r\n      console.log('genreChanged');\r\n      setGenres({\r\n        selectedGenre: val,\r\n        listOfGenresFromAPI: genres.listOfGenresFromAPI\r\n      });\r\n      \r\n      axios(`https://api.spotify.com/v1/browse/categories/${val}/playlists?limit=10`, {\r\n        method: 'GET',\r\n        headers: { 'Authorization' : 'Bearer ' + token}\r\n      })\r\n      .then (playlistResponse => {  \r\n        //console.log(playlistResponse.data.playlists.items);\r\n        setPlaylists({\r\n          selectedPlaylist: playlists.selectedPlaylist,\r\n          listOfPlaylistsFromAPI: playlistResponse.data.playlists.items\r\n        })\r\n\r\n      });\r\n    }\r\n\r\n    const playlistChanged = val => {\r\n      console.log('setPlaylists');\r\n      setPlaylists({\r\n        selectedPlaylists: val,\r\n        listOfPlaylistsFromAPI: playlists.listOfPlaylistsFromAPI\r\n      });\r\n      axios(`https://api.spotify.com/v1/playlists/${val}/tracks?limit=10`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization' : 'Bearer ' + token\r\n        }\r\n      })\r\n      .then(tracksResponse => {\r\n        console.log('setTracks');\r\n        setTracks({\r\n          selectedTrack: tracks.selectedTrack,\r\n          listOfTracksFromAPI: tracksResponse.data.items\r\n        })\r\n        //fadeIn track list if not already faded in\r\n        if( $('#musicControls').css('display') == 'none' )\r\n        {\r\n          $('#musicControls').fadeIn();\r\n        }\r\n      });\r\n    }\r\n\r\n    const listboxClicked = val => {\r\n      const currentTracks = [...tracks.listOfTracksFromAPI];\r\n      const trackInfo = currentTracks.filter(t => t.track.id === val);\r\n      setTrackDetail(trackInfo[0].track);\r\n    }\r\n\r\n  return (\r\n    <div className=\"outerWrap\">\r\n      <div className=\"App\">\r\n        <Nav/>\r\n        <Main genres={genres} playlists={playlists} genreChanged={genreChanged} playlistChanged={playlistChanged}/>\r\n      </div>\r\n      <MusicControls tracks={tracks} trackDetail={trackDetail} clicked={listboxClicked}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Program Files\\nodejs\\spotify-react\\src\\reportWebVitals.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Nav.js",["53","54","55"],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\MusicControls.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Main.js",["56","57"],"import React, { useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GenreSlider, PlaylistSlider } from './Slider';\r\n\r\nimport '../sass/AppMain.scss';\r\nimport '../sass/Slider.scss';\r\nimport '../sass/Card.scss';\r\n\r\nconst Main = props => {\r\n\r\n    const genreCardClicked = val => {\r\n        //console.log(val);\r\n        props.genreChanged(val);\r\n    }\r\n\r\n    const playlistCardClicked = val => {\r\n        //console.log(val);\r\n        props.playlistChanged(val);\r\n    }\r\n\r\n    //render genre slider once data fetched\r\n    //still calling at start while props.genres.listOfGenresFromAPI.length == 0\r\n    useEffect(() => {\r\n        console.log('make slider')\r\n        //if(props.genres.listOfGenresFromAPI.length){\r\n            //prev and next buttons always enabled now so that wont matter if refreshed, will still be able to scroll\r\n            ReactDOM.render(<GenreSlider genres={props.genres} click={genreCardClicked} />, document.getElementById(\"genreSliderContainer\"));\r\n        //}\r\n      }, [props.genres.listOfGenresFromAPI]);\r\n  \r\n      useEffect(() => {\r\n        ReactDOM.render(<PlaylistSlider playlists={props.playlists} click={playlistCardClicked} />, document.getElementById(\"playlistSliderContainer\"));\r\n        if(props.playlists.listOfPlaylistsFromAPI.length){\r\n            document.getElementById(\"playlistContainer\").style.display = 'block';\r\n        }\r\n      }, [props.playlists.listOfPlaylistsFromAPI]);\r\n  \r\n    return (\r\n    <div className=\"main\">\r\n        <div className=\"upper\">\r\n        </div>\r\n\r\n        <div className=\"mainContent\">\r\n            <h1>Genres</h1>\r\n            <div id=\"genreSliderContainer\">\r\n            </div>\r\n            <div id=\"playlistContainer\">\r\n                <h1>Playlists</h1>\r\n                <div id=\"playlistSliderContainer\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","C:\\Program Files\\nodejs\\spotify-react\\src\\spotify\\Credentials.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Slider.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\utility\\SliderBase.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\Listbox.js",[],"C:\\Program Files\\nodejs\\spotify-react\\src\\components\\DetailModal.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":50,"column":8,"nodeType":"64","endLine":50,"endColumn":48,"suggestions":"65"},{"ruleId":"66","severity":1,"message":"67","line":92,"column":48,"nodeType":"68","messageId":"69","endLine":92,"endColumn":50},{"ruleId":"70","severity":1,"message":"71","line":2,"column":10,"nodeType":"72","messageId":"73","endLine":2,"endColumn":25},{"ruleId":"70","severity":1,"message":"74","line":2,"column":27,"nodeType":"72","messageId":"73","endLine":2,"endColumn":35},{"ruleId":"70","severity":1,"message":"75","line":2,"column":37,"nodeType":"72","messageId":"73","endLine":2,"endColumn":53},{"ruleId":"62","severity":1,"message":"76","line":29,"column":10,"nodeType":"64","endLine":29,"endColumn":44,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"78","line":36,"column":10,"nodeType":"64","endLine":36,"endColumn":50,"suggestions":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'genres.selectedGenre'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setGenres' needs the current value of 'genres.selectedGenre'.","ArrayExpression",["82"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'BsHouseDoorFill' is defined but never used.","Identifier","unusedVar","'BsSearch' is defined but never used.","'BsCollectionFill' is defined but never used.","React Hook useEffect has missing dependencies: 'genreCardClicked' and 'props.genres'. Either include them or remove the dependency array.",["83"],"React Hook useEffect has missing dependencies: 'playlistCardClicked' and 'props.playlists'. Either include them or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Update the dependencies array to be: [genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]",{"range":"91","text":"92"},"Update the dependencies array to be: [genreCardClicked, props.genres, props.genres.listOfGenresFromAPI]",{"range":"93","text":"94"},"Update the dependencies array to be: [playlistCardClicked, props.playlists, props.playlists.listOfPlaylistsFromAPI]",{"range":"95","text":"96"},[1795,1835],"[genres.selectedGenre, spotify.ClientId, spotify.ClientSecret]",[1011,1045],"[genreCardClicked, props.genres, props.genres.listOfGenresFromAPI]",[1395,1435],"[playlistCardClicked, props.playlists, props.playlists.listOfPlaylistsFromAPI]"]